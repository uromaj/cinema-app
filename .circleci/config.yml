# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1
executors:
  app-executor:
    docker:
      - image: circleci/node:latest
    working_directory: ~/cinema-app

aliases:
  - &show-current-branch-name
    run:
      name: Show current branch
      command: echo ${CIRCLE_BRANCH}
  - &restore-cache
    restore_cache:
      keys:
        - app-{{ checksum "package.json" }}
        - app-
  - &install-dependancies
    run:
      name: Insatll dependancies
      command: npm install
  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ checksum "package.json" }}
  - &install-aws-cli
    run:
      name: installing aws cli
      working_directory: /
      command: |
        sudo apt-get -y -qq update
        sudo apt-get install -y awscli
#       sudo apt-get install -y python-pip python-dev build-essential
  - &build-project
    run:
      name: Build Project
      command: |
        npm install
        npm run build
        cd build
        zip ../build.zip -r * .[^.]*
        echo "Build Successful"
jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - *install-dependancies
      - *save-cache
  
  linting:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - run:
          name: linting
          command: npm run lint

  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run: 
          name: Deploy to aws s3
          command: |
            if ["${CIRCLE_BRANCH}" == "master"]
            then 
              aws --region ${AWS_REGION} s3 sync ~/cinema-app/build s3://${AWS_BUCKET_PROD} --delete
            elif  ["${CIRCLE_BRANCH}" == "staging"]
            then
              aws --region ${AWS_REGION} s3 sync ~/cinema-app/build s3://${AWS_BUCKET_STAGING} --delete
            else 
              aws --region ${AWS_REGION} s3 sync ~/cinema-app/build s3://${AWS_BUCKET_DEV} --delete
            fi

  deploy-to-aws-cloudfront:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run: 
          name: Deploy to aws cloudfront
          command: |
            aws configure set preview.cloudfront true
            if ["${CIRCLE_BRANCH}" == "master"]
            then 
              aws cloudfront create-invalidation --distribution-id ${PROD_DISTRIBUTION_ID} --paths /\* 
            elif  ["${CIRCLE_BRANCH}" == "staging"]
            then
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
            else 
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
            fi

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows            
workflows:
  build_and_deploy:
    jobs:
      - build
      - linting:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develop
                - staging
                - master




##workflows:
 ## sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    ##jobs:
      ##- node/test:
          # This is the node version to use for the `cimg/node` tag
          # Relevant tags can be found on the CircleCI Developer Hub
          # https://circleci.com/developer/images/image/cimg/node
          ##version: '16.10'
          # If you are using yarn, change the line below from "npm" to "yarn"
          ##pkg-manager: npm
